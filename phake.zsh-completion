#compdef phake
# ------------------------------------------------------------------------------
# Copyright (c) 2016 James Dinsdale - http://github.com/molovo
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the zsh-users nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL ZSH-USERS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# ------------------------------------------------------------------------------
# Description
# -----------
#
#  Completion script for phake 0.2.0 (https://github.com/molovo/phake).
#
# ------------------------------------------------------------------------------
# Authors
# -------
#
#  * James Dinsdale <hi@molovo.co> (version 0.2.0)
#
# ------------------------------------------------------------------------------

_phake() {
  local curcontext="$curcontext" state line
  local commands groups tasks _phake_groups _phake_tasks

  _arguments \
    '(-t --tasks)'{-t,--tasks}'[list all tasks defined in the Phakefile and exit]' \
    '(-g --groups)'{-g,--groups}'[list all groups defined in the Phakefile and exit]' \
    '(-d --dir)'{-d,--dir}'[specify a custom working directory]:directory:_files' \
    '(-f --phakefile)'{-f,--phakefile}'[specify a custom Phakefile]:phakefile:_files' \
    '(-h --help)'{-h,--help}'[show help text and exit]' \
    '(-v --version)'{-v,--version}'[show version information and exit]'

  tasks=()
  _phake_tasks=$(phake --tasks)

  if test $? -eq 0; then
    tasks=(${_phake_tasks})
  fi

  groups=()
  _phake_groups=$(phake --groups)

  if test $? -eq 0; then
    groups=(${_phake_groups})
  fi

  _alternative \
    "tasks:task:($tasks)" \
    "groups:group:($groups)"
}

_phake "$@"
